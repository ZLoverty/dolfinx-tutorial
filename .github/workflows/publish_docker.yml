name: Publish tutorial docker image
on:
  push:
    branches:
      - "release"
    tags:
      - "v*"
  pull_request:
    branches:
      - "release"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    strategy:
      matrix:
        os: ["ubuntu-24.04", "ubuntu-24.04-arm"]
    runs-on: ${{ matrix.os }}

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set architecture tag (amd64)
        if: ${{ matrix.os == 'ubuntu-24.04' }}
        run: echo "ARCH_TAG=amd64" >> $GITHUB_ENV

      - name: Set architecture tag (arm64)
        if: ${{ contains(matrix.os, 'arm') }}
        run: echo "ARCH_TAG=arm64" >> $GITHUB_ENV

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-${{ matrix.os }}

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          load: true
          push: false
          file: docker/Dockerfile
          platforms: linux/${{ env.ARCH_TAG }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=docker, dest=${{ runner.temp }}/image.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os}}
          path: ${{ runner.temp }}/image.tar

  push:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          name: "ubuntu-*.tar"
          path: ${{ runner.temp }}

      - name: Load image (arm)
        run: |
          docker load --input ${{ runner.temp }}/ubuntu-24.04-arm.tar
          docker load --input ${{ runner.temp }}/ubuntu-24.04.tar
          docker image ls -a
